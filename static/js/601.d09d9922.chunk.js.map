{"version":3,"file":"static/js/601.d09d9922.chunk.js","mappings":"2QACaA,EAAQC,EAAAA,GAAAA,IAAD,mICCPC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAD,gDAGVG,EAAMH,EAAAA,GAAAA,EAAD,mEAKLD,EAAQC,EAAAA,GAAAA,GAAD,2KAWPI,EAAIJ,EAAAA,GAAAA,IAAD,mEAIHK,EAAKL,EAAAA,GAAAA,IAAD,6PAUJM,EAASN,EAAAA,GAAAA,IAAD,gL,kBC/BRO,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAClBC,GAAWC,EAAAA,EAAAA,MAEf,OACE,+BACA,SAAC,EAAD,UACGF,EAAOG,OAAS,GAChBH,EAAOI,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,MAAnB,OACV,0BACE,SAACd,EAAD,CAAYe,GAAE,UAAKH,GAAOI,MAAO,CAAEC,KAAMT,GAAzC,UAEE,UAACJ,EAAD,YACF,SAACD,EAAD,CAAKe,IAAKL,EAAY,GAAD,OAVhB,mCAUgB,OAAcA,GAAeM,EAASC,IAAKN,KAChE,SAACT,EAAD,WACE,SAACH,EAAD,UAAQY,YANFF,EADA,OAgBnB,E,kBCxBYd,EAAUC,EAAAA,GAAAA,IAAH,sJAQPsB,EAAQtB,EAAAA,GAAAA,MAAH,gHAaLuB,IANOvB,EAAAA,EAAAA,IAAOwB,EAAAA,IAAPxB,CAAH,+FAMGA,EAAAA,GAAAA,OAAD,8ICnBNyB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,SAAC,EAAD,WACE,kBAAMH,SARS,SAAAI,GACjBA,EAAMC,iBACNL,EAASE,GACTC,EAAS,GACV,EAIG,WACA,SAACP,EAAD,CACEU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOP,EAEPQ,YAAY,oBACZC,SApBa,SAAAP,GACjBD,EAASC,EAAMQ,OAAOH,MAEvB,KAmBG,SAACZ,EAAD,CAAQS,KAAK,SAAb,UAAsB,SAAC,MAAD,UAKvB,EC2BH,EApDe,WACb,OAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0Bd,EAAAA,EAAAA,UAAS,IAAnC,eAAOnB,EAAP,KAAekC,EAAf,KACA,GAAwBf,EAAAA,EAAAA,WAAS,GAAjC,eAAOgB,EAAP,KAAcC,EAAd,KAEMC,EAAUL,EAAaM,IAAI,UAUjCC,EAAAA,EAAAA,YAAU,WACJF,IACJG,EAAAA,EAAAA,IAAgBH,GAAWI,MAAK,SAAAC,GAC9B,IAAIA,EAASvC,OAEX,OADAiC,GAAS,GACFO,QAAQC,IAAIT,GAErBC,GAAS,GACTF,EAAUQ,EACX,GAIF,GAAC,CAACL,EAAWF,IAcd,OACE,UAAC5C,EAAD,YAEE,SAAC0B,EAAD,CAAWC,SAdG,SAAAE,GACdA,EAIJa,EAAgB,CAACb,MAAAA,IAHfyB,MAAM,cAIR,IASKV,IAAS,oFACV,SAACpC,EAAD,CAAYC,OAAQA,KACpB,SAAC,KAAD,MAGL,C,+LC5DK8C,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,uBACvBG,EADuB,EACvBA,KADuB,SAElBA,EAAKC,QAFa,mFAAH,qDAIjBC,EAAY,mCAAG,WAAM9C,GAAN,yFACH0C,EAAAA,EAAAA,IAAA,gBAAmB1C,EAAnB,oBAAiCyC,EAAjC,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZG,EAAe,mCAAC,WAAM/C,GAAN,yFACJ0C,EAAAA,EAAAA,IAAA,gBAAmB1C,EAAnB,4BAAyCyC,EAAzC,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,EAAKI,MAFe,2CAAD,sDAIfC,EAAe,mCAAC,WAAMjD,GAAN,yFACJ0C,EAAAA,EAAAA,IAAA,gBAAmB1C,EAAnB,4BAAyCyC,EAAzC,2BADI,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAD,sDAKfV,EAAe,mCAAC,WAAMpB,GAAN,uFACJ2B,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6F1B,IADzF,cACrBsB,EADqB,yBAEpBA,EAASO,KAAKC,SAFM,2CAAD,qD","sources":["pages/Movies.styled.js","components/ListMovies.styled.js","components/ListMovies.jsx","components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Wrapper=styled.div`\n/* background-color:  #cfb8b8; */\nmin-height: 100vh;\n/* background-color: aqua; */\npadding: 5px;\n\n\n\n`","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const StyledLink=styled(Link)`\ntext-decoration: none;\n`\nexport const Title=styled.p`\nfont-size: 14px;\nmargin: 0;\ncolor: white;`\n\nexport const Wrapper=styled.ul`\ndisplay:grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-template-rows: repeat(3, 1fr);\npadding-left: 0;\ngap: 10px;\nlist-style: none;\n\n\n\n`\nexport const Img=styled.img`\ndisplay:block;\nheight: 300px;\nwidth: 100%`\nexport const Card=styled.div`\nheight: 350px;\nborder: 1px solid black;\n border-radius: 4px;\n background-color: #4b4444;\n &:hover{\n  box-shadow: 1px 4px 6px 0 rgba(0, 0, 0, 0.16), 0 4px 4px 0 rgba(0, 0, 0, 0.06),\n    0 1px 1px 0 rgba(0, 0, 0, 0.12);\n }\n`\nexport const TitleBox=styled.div`\n/* padding: 20px 24px; */\nheight: 50px;\nmargin: 0;\ndisplay: grid;\n    justify-items: center;\n    padding: 5px;\n    /* background-color: grey; */\n`","import {  useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {StyledLink, Title, Card, TitleBox, Img, Wrapper} from './ListMovies.styled'\nimport noImage from '../img/noImage.png'\nexport const ListMovies=({movies})=>{\n  const location = useLocation();\n  const imgUrl = 'https://image.tmdb.org/t/p/w500';\n    return (\n      <>\n      <Wrapper>\n        {movies.length > 0 && \n        (movies.map(({id, poster_path, title}) => (\n          <div key={id}>\n            <StyledLink to={`${id}` } state={{ from: location }}>\n              \n              <Card>\n            <Img src={poster_path? `${imgUrl}${poster_path}`: noImage} alt={title} />\n            <TitleBox>\n              <Title>{title}</Title>\n              </TitleBox>\n              </Card>\n            </StyledLink>\n          </div>\n        )))}\n    </Wrapper>\n    </>\n    )\n}\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      \n    }).isRequired\n  ).isRequired,\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n  border: grey;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\nexport const Button=styled.button`\nbackground-color: transparent;\nborder: none;\nmargin-left: 10px;\n&:hover{\n  cursor: pointer;\n  color: white;\n}\n`","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport {GoSearch} from 'react-icons/go';\nimport { Wrapper, Input,Button } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ onSubmit }) => {\nconst [query, setQuery]=useState('')\n\nconst handleChange=event=>{\n  setQuery(event.target.value)\n  \n}\nconst handleSubmit=event=>{\n  event.preventDefault()\n  onSubmit(query)\n  setQuery('')\n}\n\nreturn (\n  <Wrapper>\n    <form onSubmit={handleSubmit}>\n    <Input\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      value={query}\n      // name=\"searchValue\"\n      placeholder='Search your movie'\n      onChange={handleChange}\n    />\n    <Button type=\"submit\"><GoSearch/></Button>\n    </form>\n  </Wrapper>\n);\n  \n  }\n  \nSearchBox.propTypes={\n  onSubmit:PropTypes.func.isRequired\n}","\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from 'services/Api';\nimport {Wrapper} from './Movies.styled'\nimport { ListMovies } from 'components/ListMovies';\nimport { SearchBox } from 'components/SearchBox';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies]=useState([])\n  const [error, setError]=useState(false)\n  \n  const movieName=searchParams.get('query')\n  // console.log(movieName)\n\n  // useEffect(()=>{\n    \n  //   if(!movieName){\n      \n  //     return}\n  //   getMovieByQuery(movieName).then(res=>setMovies(res))\n  // },[movieName])\n  useEffect(()=>{\n    if(!movieName){return}\n    getMovieByQuery(movieName).then(response=>{\n      if(!response.length){\n        setError(true)\n        return(console.log(error))\n      }\n      setError(false)\n      setMovies(response)\n    }\n      \n      \n    )\n  },[movieName, error])\n  \n\n const handleSearch=query=>{\n  if(!query){\n    alert('Empty query')\n    return\n  }\n  setSearchParams({query})\n }\n\n\n \n\n  return (\n    <Wrapper>\n      \n      <SearchBox onSubmit={handleSearch}/>\n      {error && <p>There is no movies with this request. Please, try again</p>}\n      <ListMovies movies={movies}/>\n      <Outlet />\n    </Wrapper>\n  );\n};\nexport default Movies;\nMovies.propTypes={\n  onSubmit: PropTypes.func,\n  movies:PropTypes.array,\n}","import axios from 'axios';\nconst API_KEY = '7152fe47b59b20f9de7689c6d0de595b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return await data.results;\n};\nexport const GetMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n};\nexport const getMovieCredits=async id=>{\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return data.cast;\n}\nexport const getMovieReviews=async id=>{\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data.results;\n  // console.log(data.results)\n}\nexport const getMovieByQuery=async query=>{\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n  return response.data.results;\n  // console.log(response.data.results)\n}\n"],"names":["Wrapper","styled","StyledLink","Link","Title","Img","Card","TitleBox","ListMovies","movies","location","useLocation","length","map","id","poster_path","title","to","state","from","src","noImage","alt","Input","Button","HiSearch","SearchBox","onSubmit","useState","query","setQuery","event","preventDefault","type","autoComplete","autoFocus","value","placeholder","onChange","target","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","movieName","get","useEffect","getMovieByQuery","then","response","console","log","alert","API_KEY","axios","getTrendingMovies","data","results","GetMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}