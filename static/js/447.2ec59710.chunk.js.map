{"version":3,"file":"static/js/447.2ec59710.chunk.js","mappings":"qPACaA,EAAKC,EAAAA,GAAAA,GAAD,wCAEJC,EAAKD,EAAAA,GAAAA,EAAD,0CAEJE,EAAKF,EAAAA,GAAAA,EAAD,2CAGJG,EAAUH,EAAAA,GAAAA,IAAD,mF,SCkBtB,EAtBe,WACX,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAASC,EAAAA,EAAAA,MAATD,QAOH,IANJE,EAAAA,EAAAA,YAAU,WACDF,IAGHG,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAWM,EAAf,GACvC,GAAE,CAACL,IACCF,EAGT,OAAO,yBACiB,IAAnBA,EAAQQ,OAAeR,EAAQS,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,OAAOC,EAAZ,EAAYA,QAAZ,OAAwB,SAAClB,EAAD,WACxD,2BACI,SAACE,EAAD,UAAOe,GAAgB,oBACvB,SAACd,EAAD,UAAOe,GAAkB,uBAHsCF,EAAnC,KAKvB,SAACZ,EAAD,8BAGpB,C,+LCxBKe,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,uBACvBG,EADuB,EACvBA,KADuB,SAElBA,EAAKC,QAFa,mFAAH,qDAIjBC,EAAY,mCAAG,WAAMR,GAAN,yFACHI,EAAAA,EAAAA,IAAA,gBAAmBJ,EAAnB,oBAAiCG,EAAjC,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZG,EAAe,mCAAC,WAAMT,GAAN,yFACJI,EAAAA,EAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,EAAzC,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,EAAKI,MAFe,2CAAD,sDAIff,EAAe,mCAAC,WAAMK,GAAN,yFACJI,EAAAA,EAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,EAAzC,2BADI,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAD,sDAKfI,EAAe,mCAAC,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FS,IADzF,cACrBf,EADqB,yBAEpBA,EAASS,KAAKC,SAFM,2CAAD,qD","sources":["components/Reviews.styled.js","components/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const List=styled.ul`\nlist-style:none;`\nexport const Name=styled.p`\nfont-weight: bold;`\nexport const Text=styled.p`\nfont-style: italic;`\n\nexport const ErrorText=styled.div`\nfont-style: italic;\nmargin-left: 10px;\npadding-top: 10px;`","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport {getMovieReviews} from '../services/Api'\nimport {List, Name, Text, ErrorText} from './Reviews.styled'\n const Reviews=()=>{\n    const [reviews, setReviews]=useState(null)\n    const {movieId}=useParams()\n    useEffect(()=>{\n        if (!movieId) {\n            return;\n          }\n          getMovieReviews(movieId).then(response => setReviews(response));\n        }, [movieId]);\n        if (!reviews) {\n            return;\n          }\n    return <div>\n        {reviews.length !== 0? (reviews.map(({id,author,content})=>(<List key={id}>\n            <li>\n                <Name>{author? author: 'No information'}</Name>\n                <Text>{content? content: 'No information'}</Text>\n            </li>\n        </List>))) : <ErrorText>No information\n            </ErrorText>}\n    </div>\n}\nexport default Reviews;","import axios from 'axios';\nconst API_KEY = '7152fe47b59b20f9de7689c6d0de595b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return await data.results;\n};\nexport const GetMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n};\nexport const getMovieCredits=async id=>{\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return data.cast;\n}\nexport const getMovieReviews=async id=>{\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data.results;\n  // console.log(data.results)\n}\nexport const getMovieByQuery=async query=>{\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n  return response.data.results;\n  // console.log(response.data.results)\n}\n"],"names":["List","styled","Name","Text","ErrorText","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","response","length","map","id","author","content","API_KEY","axios","getTrendingMovies","data","results","GetMovieById","getMovieCredits","cast","getMovieByQuery","query"],"sourceRoot":""}